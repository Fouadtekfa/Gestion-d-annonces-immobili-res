openapi: 3.0.3
info:
  title: Announces Immobiliers - API
  description: |-
    Announces TP

    Pour accéder à GraphQL Playground, veuillez cliquer [ici](http://localhost:4500/playground).

  contact:
    email: noemail@exemple.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
  
servers:
- url: http://localhost:4900
tags:
- name: announce
  description: Tout sur les Annonces
paths:
  /announces:
    get:
      tags:
      - announce
      summary: Get all announces
      description: Get all announces dans la bd
      operationId: getAllAnnounces
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announce'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announce'
      x-swagger-router-controller: Announce
  /announce/{announceId}:
    get:
      tags:
      - announce
      summary: Find announce by ID
      description: Returns a single announce
      operationId: getAnnounceById
      parameters:
      - name: announceId
        in: path
        description: ID of announce to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Announce'
        "400":
          description: Invalid ID supplied
        "404":
          description: Announce not found
      x-swagger-router-controller: Announce
    delete:
      tags:
      - announce
      summary: Delete announce
      description: Delete announce
      operationId: deleteAnnounce
      parameters:
      - name: announceId
        in: path
        description: The id that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid id supplied
        "404":
          description: Announce not found
      x-swagger-router-controller: Announce
  /announce/create:
    post:
      tags:
      - announce
      summary: Create an announce
      description: Create an announce
      operationId: addAnnounce
      requestBody:
        description: Create an announce
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Announce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announce'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Announce'
        "405":
          description: Invalid input
      x-swagger-router-controller: Announce
  /announce/modify:
    put:
      tags:
      - announce
      summary: Update an announce
      description: Update an announce
      operationId: updateAnnounce
      parameters:
      - name: _id
        in: query
        description: id to be updated
        required: true
        style: form
        explode: false
        schema:
          type: string
      requestBody:
        description: Update an announce
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Announce'
          application/xml:
            schema:
              $ref: '#/components/schemas/Announce'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Announce'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Announce'
        "405":
          description: Invalid input
      x-swagger-router-controller: Announce
  /announce/{announceId}/commentaire/ajouter:
    post:
      tags:
      - announce
      summary: Create a commentary
      description: Create a commentary
      operationId: addCommentary
      parameters:
      - name: announceId
        in: path
        description: The id that needs to insert a commentary
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Create a commentary
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                commentary:
                  $ref: '#/components/schemas/Comment'
              required:
                - user_id
                - commentary
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Announce'
        "405":
          description: Invalid input
      x-swagger-router-controller: Announce
  /announce/{announceId}/commentaire/history:
    post:
      tags:
      - announce
      summary: Add history in commentary
      description: Add history in commentary
      operationId: addCommentaryHistory
      parameters:
      - name: announceId
        in: path
        description: The id that needs to insert a new history
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Add commentary history
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announce'
            application/xml:
              schema:
                $ref: '#/components/schemas/Announce'
        "405":
          description: Invalid input
      x-swagger-router-controller: Announce
  /createuser:
    post:
      tags:
      - user
      summary: Create an user
      description: Create an user
      operationId: addUser
      requestBody:
        description: Create an user
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
                ConfirmPassword:
                  type: string
              required:
                - user
                - ConfirmPassword
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "405":
          description: Invalid input
      x-swagger-router-controller: User  
  /user/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      requestBody:
        description: Create an announce
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: "successful operation"
          headers:
            X-Expires-After:
              description: "date in UTC when token expires"
              schema:
                type: "string"
                format: "date-time"
            X-Rate-Limit:
              description: "calls per hour allowed by the user"
              schema:
                type: "integer"
                format: "int32"
          content:
            application/json:
              schema:
                type: "string"
        "400":
          description: "Invalid username/password supplied"
      x-swagger-router-controller: "User"
components:
  schemas:
    Login:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          example: "text@exemple.com"
        password:
          type: string
          example: "myPassword123?"
    Announce:
      required:
        - name
        - type
      type: object
      properties:
        name:
          type: string          
          example: "AnnounceParis"
        type:
          type: string
          enum:
            - Vente
            - Location
        published:
          type: boolean
          example: false
        status:
          type: string
          enum:
            - Disponible
            - Loué
            - Vendu
        description:
          type: string
        price:
          type: integer
        date:
          type: string
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
        by:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
      xml:
        name: announce
    Comment:
      properties:
        user_id:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/History'
    History:
      properties:
        id_user:
          type: string
        content:
          type: string
        date:
          type: string
        read:
          type: boolean
    Photo:
      properties:
        filename:
          type: string
        originalName:
          type: string
    User:
      properties:
        name:
          type: string
        first_name:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      example:
        code: 0
        type: type
        message: message
      xml:
        name: '##default'
  requestBodies:
    Announce:
      description: Announce object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Announce'
        application/xml:
          schema:
            $ref: '#/components/schemas/Announce'
  